version: '3'

services:
    nodejs:
        build:
            context: 'docker/node/${NODE_DOCKER_ENV:-20}'
            dockerfile: Dockerfile
        image: nodejs
        container_name: nodejs_satoro_bot
        restart: unless-stopped
        env_file: .env
        environment:
            ENV: '${ENV:-docker}'
            DISCORD_TOKEN: '${DISCORD_TOKEN}'
            DISCORD_CLIENT_ID: '${DISCORD_CLIENT_ID}'
            GUILD_ID: '${GUILD_ID:-}'
            MONGO_USERNAME: '${MONGO_USERNAME:-admin}'
            MONGO_PASSWORD: '${MONGO_PASSWORD:-password}'
            MONGO_HOSTNAME: mongodb
            MONGO_PORT: '${MONGO_PORT:-27017}'
            MONGO_DB: '${MONGO_DB:-satoro_bot}'
            NODE_DOCKER_ENV: '${NODE_DOCKER_ENV:-20}'
            DOCKER_PROJECT_DIR: '${DOCKER_PROJECT_DIR:-/home/node/app}'
        ports:
            - "${NODE_PORT:-80}:8080"
        volumes:
            - "./:${DOCKER_PROJECT_DIR:-/home/node/app}"
        networks:
            - bot
        depends_on:
            - mongodb
        command: '${DOCKER_PROJECT_DIR:-/home/node/app}/cmd/run-envs/${ENV:-docker}.sh'

    mongodb:
        image: mongo:latest
        container_name: mongodb_satoro_bot
        restart: unless-stopped
        env_file: .env
        ports:
            - "${DB_PORT:-27017}:27017"
        networks:
            - bot
        environment:
            MONGO_INITDB_ROOT_USERNAME: '${MONGO_USERNAME:-admin}'
            MONGO_INITDB_ROOT_PASSWORD: '${MONGO_PASSWORD:-password}'
            MONGO_INITDB_DATABASE: '${MONGO_DB:-satoro_bot}'
        user: 999:999
        volumes:
            - mongodb_data:/data/db
            - ./init-scripts:/docker-entrypoint-initdb.d

networks:
    bot:
        driver: bridge

volumes:
    mongodb_data:
        driver: local