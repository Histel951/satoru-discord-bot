version: '3'

services:
    node:
        build:
            context: 'docker/node/${NODE_DOCKER_ENV:-20}'
            dockerfile: Dockerfile
        image: nodejs
        container_name: node
        restart: unless-stopped
        env_file: .env
        environment:
            ENV: '${ENV:-docker}'
            DISCORD_TOKEN: '${DISCORD_TOKEN}'
            DISCORD_CLIENT_ID: '${DISCORD_CLIENT_ID}'
            GUILD_ID: '${GUILD_ID:-}'
            MONGO_USERNAME: '${MONGO_USERNAME:-root}'
            MONGO_PASSWORD: '${MONGO_PASSWORD:-root}'
            MONGO_HOSTNAME: db
            MONGO_PORT: '${MONGO_PORT:-27017}'
            MONGO_DB: '${MONGO_DB:-satoro_bot}'
        ports:
            - "${NODE_PORT:-80}:8080"
        volumes:
            - "./:${DOCKER_PROJECT_DIR:-/home/node/app}"
            - "node_modules:${DOCKER_PROJECT_DIR:-/home/node/app}/node_modules"
        networks:
            - bot
        depends_on:
            - db
        command: '${DOCKER_PROJECT_DIR:-/home/node/app}/docker/node/${NODE_DOCKER_ENV:-20}/wait-for.sh db:${MONGO_PORT:-27017} -- npm run ${ENV:-docker} --prefix ${DOCKER_PROJECT_DIR:-/home/node/app}'

    db:
        image: 'mongo:${MONGO_TAG:-7.0.4}'
        container_name: db
        restart: unless-stopped
        env_file: .env
        environment:
            MONGO_INITDB_ROOT_USERNAME: '${MONGO_USERNAME:-root}'
            MONGO_INITDB_ROOT_PASSWORD: '${MONGO_PASSWORD:-root}'
            MONGO_INITDB_DATABASE: '${MONGO_DB:-satoro_bot}'
        volumes:
            - mongo:/data/db
        networks:
            - bot
        ports:
          - "${DB_PORT:-27017}:27017"

networks:
  bot:
    driver: bridge

volumes:
    node_modules:
    mongo: