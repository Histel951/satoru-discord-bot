version: '3'

services:
    node:
        build:
            context: 'docker/node/${NODE_DOCKER_ENV:-20}'
            dockerfile: Dockerfile
        image: nodejs
        container_name: node
        restart: unless-stopped
        env_file: .env
        environment:
            - ENV=$ENV:-dev
            - DISCORD_TOKEN=$DISCORD_TOKEN
            - DISCORD_CLIENT_ID=$DISCORD_CLIENT_ID
            - GUILD_ID=$GUILD_ID
            - MONGO_USERNAME=$MONGO_USERNAME:-root
            - MONGO_PASSWORD=$MONGO_PASSWORD:-root
            - MONGO_HOSTNAME=db
            - MONGO_PORT=$MONGO_PORT:-27017
            - MONGO_DB=$MONGO_DB:-satoro_bot
        ports:
            - "80:8080"
        volumes:
            - .:/home/node/app
            - node_modules:/home/node/app/node_modules
        networks:
            - bot
        command: '/home/node/app/docker/node/${NODE_DOCKER_ENV:-20}/wait-for.sh db:${MONGO_PORT:-27017} -- /home/node/app/node_modules/.bin/nodemon src/index.ts'

    db:
        image: 'mongo:${MONGO_TAG:-7.0.4}'
        container_name: db
        restart: unless-stopped
        env_file: .env
        environment:
            - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME:-root
            - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD:-root
        volumes:
            - mongo:/data/db
        networks:
            - bot

networks:
  bot:
    driver: bridge

volumes:
    node_modules:
    mongo: