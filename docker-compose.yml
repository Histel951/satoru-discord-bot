version: '3'

services:
    mongodb:
        extends:
            service: mongodb-service
            file: "mongodb/docker-services.yml"
        env_file:
            - .env
        networks:
            - app

    discord-js-app:
        extends:
            service: discord-js-service
            file: "discord-bot/docker-services.yml"
        env_file:
            - .env
        environment:
            MONGO_USERNAME: '${MONGO_USERNAME:-admin}'
            MONGO_PASSWORD: '${MONGO_PASSWORD:-password}'
            MONGO_HOSTNAME: mongodb
            MONGO_PORT: '${MONGO_PORT:-27017}'
            MONGO_DB: '${MONGO_DB:-satoro_bot}'
            NODE_DOCKER_ENV: '${NODE_DOCKER_ENV:-20}'
        stop_grace_period: 1m
        networks:
            - app
        depends_on:
            - mongodb

    api-app:
        extends:
            service: api-service
            file: "api/docker-services.yml"
        env_file:
            - .env
        environment:
            MONGO_USERNAME: '${MONGO_USERNAME:-admin}'
            MONGO_PASSWORD: '${MONGO_PASSWORD:-password}'
            MONGO_HOSTNAME: mongodb
            MONGO_PORT: '${MONGO_PORT:-27017}'
            MONGO_DB: '${MONGO_DB:-satoro_bot}'
            NODE_DOCKER_ENV: '${NODE_DOCKER_ENV:-20}'
        stop_grace_period: 1m
        networks:
            - app
        depends_on:
            - mongodb
#            - redis

#    redis:
#        image: redis
#        container_name: redis
#        ports:
#            - "${REDIS_PORT:-6379}:${REDIS_PORT:-6379}"
#        restart: always
#        environment:
#            REDIS_PASSWORD: '${REDIS_PASSWORD:-password}'
#            REDIS_PORT: '${REDIS_PORT:-6379}'
#        env_file:
#            - .env
#        networks:
#            - app

networks:
    app:
        driver: bridge

volumes:
    mongodb_data:
        driver: local