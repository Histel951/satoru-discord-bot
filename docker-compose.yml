version: '3'

services:
    mongodb:
        image: mongo:latest
        container_name: mongodb_satoro_bot
        restart: unless-stopped
        env_file: .env
        ports:
            - "${DB_PORT:-27017}:27017"
        networks:
            - app
        environment:
            MONGO_INITDB_ROOT_USERNAME: '${MONGO_USERNAME:-admin}'
            MONGO_INITDB_ROOT_PASSWORD: '${MONGO_PASSWORD:-password}'
            MONGO_INITDB_DATABASE: '${MONGO_DB:-satoro_bot}'
        user: 999:999
        volumes:
            - mongodb_data:/data/db
            - ./init-scripts:/docker-entrypoint-initdb.d

    discord-js-app:
        extends:
            service: discord-js-service
            file: "discord-bot/services.yml"
        env_file: .env
        environment:
            MONGO_USERNAME: '${MONGO_USERNAME:-admin}'
            MONGO_PASSWORD: '${MONGO_PASSWORD:-password}'
            MONGO_HOSTNAME: mongodb
            MONGO_PORT: '${MONGO_PORT:-27017}'
            MONGO_DB: '${MONGO_DB:-satoro_bot}'
            NODE_DOCKER_ENV: '${NODE_DOCKER_ENV:-20}'
        networks:
            - app
        depends_on:
            - mongodb

#    api-app:
#        extends:
#            service: api-service
#            file: "api/services.yml"
#        env_file: api.env
#        environment:
#            MONGO_USERNAME: '${MONGO_USERNAME:-admin}'
#            MONGO_PASSWORD: '${MONGO_PASSWORD:-password}'
#            MONGO_HOSTNAME: mongodb
#            MONGO_PORT: '${MONGO_PORT:-27017}'
#            MONGO_DB: '${MONGO_DB:-satoro_bot}'
#            NODE_DOCKER_ENV: '${NODE_DOCKER_ENV:-20}'
#        networks:
#            - app
#        depends_on:
#            - mongodb

networks:
    app:
        driver: bridge

volumes:
    mongodb_data:
        driver: local